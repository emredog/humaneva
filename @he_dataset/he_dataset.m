function [this] = dataset(name, partition);
% HE_DATASET loads the data associated with a particular HumanEva dataset
%
% Syntax:
%
%   [dset] = HE_DATASET loads the full HumanEvaI dataset data.
%
%   [dset] = HE_DATASET(name, partition); will load a particular PARTITION
%   of the specified NAME dataset. Currently the only valid NAME is 
%   'HumanEvaI' and 'HumanEvaII'. The valid valued for the PARTITION 
%   are {'All', 'Train', 'Validate', 'Test'}. 
%       'All'      - refers to the full dataset
%       'Train'    - refers to the sub-set that is allocated for training
%       'Validate' - refers to the sub-set that is allocated for validation
%       'Test'     - refers to the sub-set that is allocated for tresting
%                    (this will not contain synchronized mocap data). 
%
% Written by: Leonid Sigal 
% Revision:   1.1
% Date:       8/11/2007
%
% Copyright 2006, Brown University 
% All Rights Reserved Permission to use, copy, modify, and distribute this 
% software and its documentation for any non-commercial purpose is hereby 
% granted without fee, provided that the above copyright notice appear in 
% all copies and that both that copyright notice and this permission 
% notice appear in supporting documentation, and that the name of the 
% author not be used in advertising or publicity pertaining to distribution 
% of the software without specific, written prior permission. 
% THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
% INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ANY 
% PARTICULAR PURPOSE. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY 
% SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER 
% RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF 
% CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
% CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 

if (nargin < 2)
    partition = 'All';
end

if (nargin < 1)
    name = 'HumanEvaI';
end

if (nargin == 1) 
    if (isa(name, 'he_dataset'))
        this = name;
        return;
    end
end

if (~strcmp(name, 'HumanEvaI'))
    if (~strcmp(name, 'HumanEvaII'))
        warning('Dataset is not supported');    
    end
end

if (~strcmp(partition, 'All'))
    if (~strcmp(partition, 'Train'))
        if (~strcmp(partition, 'Validate'))
            if (~strcmp(partition, 'Test'))
                warning('Partition is not supported');    
            end
        end
    end
end


HumanEvaI_Dataset_Data = ...
{ ...
    'HumanEvaI', '../', 'S1', 'Walking',    '1', 6,    590, 'Validate'; ...
    'HumanEvaI', '../', 'S1', 'Walking',    '1', 591, 1203, 'Train'   ; ... 
    'HumanEvaI', '../', 'S1', 'Walking',    '2', 6,   1004, 'Test'    ; ... 
    'HumanEvaI', '../', 'S1', 'Walking',    '3', 1,   3238, 'Train'   ; ...
    'HumanEvaI', '../', 'S1', 'Jog',        '1', 6,    367, 'Validate'; ...
    'HumanEvaI', '../', 'S1', 'Jog',        '1', 368,  740, 'Train'   ; ... 
    'HumanEvaI', '../', 'S1', 'Jog',        '2', 6,    874, 'Test'    ; ... 
    'HumanEvaI', '../', 'S1', 'Jog',        '3', 1,   3175, 'Train'   ; ...
    'HumanEvaI', '../', 'S1', 'ThrowCatch', '1', 6,    473, 'Validate'; ...
    'HumanEvaI', '../', 'S1', 'ThrowCatch', '1', 474,  945, 'Train'   ; ... 
    'HumanEvaI', '../', 'S1', 'ThrowCatch', '2', 6,    951, 'Test'    ; ... 
    'HumanEvaI', '../', 'S1', 'ThrowCatch', '3', 1,   3453, 'Train'   ; ...
    'HumanEvaI', '../', 'S1', 'Gestures',   '1', 6,    395, 'Validate'; ...
    'HumanEvaI', '../', 'S1', 'Gestures',   '1', 396,  801, 'Train'   ; ... 
    'HumanEvaI', '../', 'S1', 'Gestures',   '2', 6,   1070, 'Test'    ; ... 
    'HumanEvaI', '../', 'S1', 'Gestures',   '3', 1,   2127, 'Train'   ; ...
    'HumanEvaI', '../', 'S1', 'Box',        '1', 6,    385, 'Validate'; ...
    'HumanEvaI', '../', 'S1', 'Box',        '1', 386,  789, 'Train'   ; ...
    'HumanEvaI', '../', 'S1', 'Box',        '2', 6,    606, 'Test'    ; ... 
    'HumanEvaI', '../', 'S1', 'Box',        '3', 1,   1653, 'Train'   ; ...
    'HumanEvaI', '../', 'S1', 'Combo',      '2', 6,   2602, 'Test'    ; ...  
  ...
    'HumanEvaI', '../', 'S2', 'Walking',    '1', 6,    438, 'Validate'; ...
    'HumanEvaI', '../', 'S2', 'Walking',    '1', 439,  876, 'Train'   ; ... 
    'HumanEvaI', '../', 'S2', 'Walking',    '2', 6,   1093, 'Test'    ; ... 
    'HumanEvaI', '../', 'S2', 'Walking',    '3', 1,   1523, 'Train'   ; ...
    'HumanEvaI', '../', 'S2', 'Jog',        '1', 6,    398, 'Validate'; ...
    'HumanEvaI', '../', 'S2', 'Jog',        '1', 399,  795, 'Train'   ; ... 
    'HumanEvaI', '../', 'S2', 'Jog',        '2', 6,    727, 'Test'    ; ... 
    'HumanEvaI', '../', 'S2', 'Jog',        '3', 1,   1573, 'Train'   ; ...
    'HumanEvaI', '../', 'S2', 'ThrowCatch', '1', 6,    550, 'Validate'; ...
    'HumanEvaI', '../', 'S2', 'ThrowCatch', '1', 551, 1128, 'Train'   ; ...
    'HumanEvaI', '../', 'S2', 'ThrowCatch', '2', 6,   1399, 'Test'    ; ... 
    'HumanEvaI', '../', 'S2', 'ThrowCatch', '3', 1,   3340, 'Train'   ; ...
    'HumanEvaI', '../', 'S2', 'Gestures',   '1', 6,    500, 'Validate'; ...
    'HumanEvaI', '../', 'S2', 'Gestures',   '1', 501,  901, 'Train'   ; ...
    'HumanEvaI', '../', 'S2', 'Gestures',   '2', 6,   1062, 'Test'    ; ... 
    'HumanEvaI', '../', 'S2', 'Gestures',   '3', 1,   3551, 'Train'   ; ...
    'HumanEvaI', '../', 'S2', 'Box',        '1', 6,    382, 'Validate'; ... 
    'HumanEvaI', '../', 'S2', 'Box',        '1', 383,  734, 'Train'   ; ... 
    'HumanEvaI', '../', 'S2', 'Box',        '2', 6,    989, 'Test'    ; ... 
    'HumanEvaI', '../', 'S2', 'Box',        '3', 1,   3108, 'Train'   ; ...
    'HumanEvaI', '../', 'S2', 'Combo',      '2', 6,   2054, 'Test'    ; ... 
  ...
    'HumanEvaI', '../', 'S3', 'Walking',    '1', 6,    448, 'Validate'; ...
    'HumanEvaI', '../', 'S3', 'Walking',    '1', 449,  939, 'Train'   ; ... 
    'HumanEvaI', '../', 'S3', 'Walking',    '2', 6,    805, 'Test'    ; ... 
    'HumanEvaI', '../', 'S3', 'Walking',    '3', 1,   2358, 'Train'   ; ...
    'HumanEvaI', '../', 'S3', 'Jog',        '1', 6,    401, 'Validate'; ...
    'HumanEvaI', '../', 'S3', 'Jog',        '1', 402,  842, 'Train'   ; ... 
    'HumanEvaI', '../', 'S3', 'Jog',        '2', 6,    864, 'Test'    ; ... 
    'HumanEvaI', '../', 'S3', 'Jog',        '3', 1,   1973, 'Train'   ; ...
    'HumanEvaI', '../', 'S3', 'ThrowCatch', '1', 6,    493, 'Validate'; ...
    'HumanEvaI', '../', 'S3', 'ThrowCatch', '1', 494, 1027, 'Train'   ; ... 
    'HumanEvaI', '../', 'S3', 'ThrowCatch', '2', 6,   1000, 'Test'    ; ... 
    'HumanEvaI', '../', 'S3', 'ThrowCatch', '3', 1,   2074, 'Train'   ; ...
    'HumanEvaI', '../', 'S3', 'Gestures',   '1', 6,    533, 'Validate'; ...
    'HumanEvaI', '../', 'S3', 'Gestures',   '1', 534, 1102, 'Train'   ; ... 
    'HumanEvaI', '../', 'S3', 'Gestures',   '2', 6,    553, 'Test'    ; ... 
    'HumanEvaI', '../', 'S3', 'Gestures',   '3', 1,   1789, 'Train'   ; ...
    'HumanEvaI', '../', 'S3', 'Box',        '1', 6,    512, 'Validate'; ...
    'HumanEvaI', '../', 'S3', 'Box',        '1', 513, 1021, 'Train'   ; ... 
    'HumanEvaI', '../', 'S3', 'Box',        '2', 6,    753, 'Test'    ; ... 
    'HumanEvaI', '../', 'S3', 'Box',        '3', 1,   1573, 'Train'   ; ...
    'HumanEvaI', '../', 'S3', 'Combo',      '2', 6,   1798, 'Test'    ; ...   
   ...
    'HumanEvaI', '../', 'S4', 'Walking',    '2', 6,    667, 'Test'    ; ... 
    'HumanEvaI', '../', 'S4', 'Jog',        '2', 6,    590, 'Test'    ; ... 
    'HumanEvaI', '../', 'S4', 'ThrowCatch', '2', 6,    773, 'Test'    ; ... 
    'HumanEvaI', '../', 'S4', 'Gestures',   '2', 6,    459, 'Test'    ; ...
    'HumanEvaI', '../', 'S4', 'Box',        '2', 6,    574, 'Test'    ; ... 
    'HumanEvaI', '../', 'S4', 'Combo',      '2', 6,   1102, 'Test'    ; ... 
};

HumanEvaII_Dataset_Data = ...
{ ...
    'HumanEvaII', '../', 'S2', 'Combo',     '1', 1,   1202, 'Test'    ; ...
    'HumanEvaII', '../', 'S4', 'Combo',     '4', 2,   1258, 'Test'    ; ...
  ...
};


HumanEva_Dataset_Struct = cell2struct([HumanEvaI_Dataset_Data; HumanEvaII_Dataset_Data] , ...
    {'DatasetName', 'DatasetBasePath', ...
     'SubjectName', 'ActionType', 'Trial', ...
     'FrameStart', 'FrameEnd', 'Partition'}, 2);

InconsistentEntries = []; 
for I = 1:length(HumanEva_Dataset_Struct)    
    % If entry is not part of the requested dataset, then remove it
    if (~strcmp(HumanEva_Dataset_Struct(I).DatasetName, name))
        InconsistentEntries(end+1) = I;
    else
        % If entry is not part of the requested partition, then remove it
        if (~strcmp(partition, 'All'))
            if (~strcmp(HumanEva_Dataset_Struct(I).Partition, partition))
                InconsistentEntries(end+1) = I;
            end
        end
    end
end
HumanEva_Dataset_Struct(InconsistentEntries) = [];
    
this = class(HumanEva_Dataset_Struct, 'he_dataset');


     